<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axTChart1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAxgYAAAIB
        AAAAAQAAAAAAAAAAAAAAALEGAABUUEYwC1RDaGFydENoYXJ0AARMZWZ0AgADVG9wAgAFV2lkdGgDHAEG
        SGVpZ2h0AwUBIUJhY2tXYWxsLkJydXNoLkdyYWRpZW50LkRpcmVjdGlvbgcLZ2RCb3R0b21Ub3AgQmFj
        a1dhbGwuQnJ1c2guR3JhZGllbnQuRW5kQ29sb3IHB2NsV2hpdGUgQmFja1dhbGwuQnJ1c2guR3JhZGll
        bnQuTWlkQ29sb3IHBmNsTm9uZSJCYWNrV2FsbC5CcnVzaC5HcmFkaWVudC5TdGFydENvbG9yBOrq6gAf
        QmFja1dhbGwuQnJ1c2guR3JhZGllbnQuVmlzaWJsZQkUQmFja1dhbGwuVHJhbnNwYXJlbnQIDkZvb3Qu
        Rm9udC5OYW1lBgdWZXJkYW5hEkdyYWRpZW50LkRpcmVjdGlvbgcLZ2RCb3R0b21Ub3ARR3JhZGllbnQu
        RW5kQ29sb3IHB2NsV2hpdGURR3JhZGllbnQuTWlkQ29sb3IE6urqABNHcmFkaWVudC5TdGFydENvbG9y
        BOrq6gAQR3JhZGllbnQuVmlzaWJsZQkOTGVmdFdhbGwuQ29sb3IE///gAA9SaWdodFdhbGwuQ29sb3IE
        ///gABFTdWJGb290LkZvbnQuTmFtZQYHVmVyZGFuYRJTdWJUaXRsZS5Gb250Lk5hbWUGB1ZlcmRhbmEP
        VGl0bGUuRm9udC5OYW1lBgdWZXJkYW5hElRpdGxlLlRleHQuU3RyaW5ncwESAAAAAAAVQm90dG9tQXhp
        cy5BeGlzLkNvbG9yBEBAQAAVQm90dG9tQXhpcy5HcmlkLkNvbG9yBKmpqQAaQm90dG9tQXhpcy5MYWJl
        bHNGb250Lk5hbWUGB1ZlcmRhbmEbQm90dG9tQXhpcy5UaWNrc0lubmVyLkNvbG9yBKmpqQAaQm90dG9t
        QXhpcy5UaXRsZS5Gb250Lk5hbWUGB1ZlcmRhbmEURGVwdGhBeGlzLkF4aXMuQ29sb3IEQEBAABREZXB0
        aEF4aXMuR3JpZC5Db2xvcgSpqakAGURlcHRoQXhpcy5MYWJlbHNGb250Lk5hbWUGB1ZlcmRhbmEaRGVw
        dGhBeGlzLlRpY2tzSW5uZXIuQ29sb3IEqampABlEZXB0aEF4aXMuVGl0bGUuRm9udC5OYW1lBgdWZXJk
        YW5hF0RlcHRoVG9wQXhpcy5BeGlzLkNvbG9yBEBAQAAXRGVwdGhUb3BBeGlzLkdyaWQuQ29sb3IEqamp
        ABxEZXB0aFRvcEF4aXMuTGFiZWxzRm9udC5OYW1lBgdWZXJkYW5hHURlcHRoVG9wQXhpcy5UaWNrc0lu
        bmVyLkNvbG9yBKmpqQAcRGVwdGhUb3BBeGlzLlRpdGxlLkZvbnQuTmFtZQYHVmVyZGFuYRJMZWZ0QXhp
        cy5BdXRvbWF0aWMIGUxlZnRBeGlzLkF1dG9tYXRpY01heGltdW0IGUxlZnRBeGlzLkF1dG9tYXRpY01p
        bmltdW0IE0xlZnRBeGlzLkF4aXMuQ29sb3IEQEBAABNMZWZ0QXhpcy5HcmlkLkNvbG9yBKmpqQAYTGVm
        dEF4aXMuTGFiZWxzRm9udC5OYW1lBgdWZXJkYW5hEExlZnRBeGlzLk1heGltdW0FAAAAAAAAAMgDQBBM
        ZWZ0QXhpcy5NaW5pbXVtBQAAAAAAAADwAkAZTGVmdEF4aXMuVGlja3NJbm5lci5Db2xvcgSpqakAGExl
        ZnRBeGlzLlRpdGxlLkZvbnQuTmFtZQYHVmVyZGFuYRFMZWdlbmQuQ2hlY2tCb3hlcwkQTGVnZW5kLkZv
        bnQuTmFtZQYHVmVyZGFuYRRSaWdodEF4aXMuQXhpcy5Db2xvcgRAQEAAFFJpZ2h0QXhpcy5HcmlkLkNv
        bG9yBKmpqQAZUmlnaHRBeGlzLkxhYmVsc0ZvbnQuTmFtZQYHVmVyZGFuYRpSaWdodEF4aXMuVGlja3NJ
        bm5lci5Db2xvcgSpqakAGVJpZ2h0QXhpcy5UaXRsZS5Gb250Lk5hbWUGB1ZlcmRhbmESVG9wQXhpcy5B
        eGlzLkNvbG9yBEBAQAASVG9wQXhpcy5HcmlkLkNvbG9yBKmpqQAXVG9wQXhpcy5MYWJlbHNGb250Lk5h
        bWUGB1ZlcmRhbmEYVG9wQXhpcy5UaWNrc0lubmVyLkNvbG9yBKmpqQAXVG9wQXhpcy5UaXRsZS5Gb250
        Lk5hbWUGB1ZlcmRhbmEGVmlldzNECBFDb2xvclBhbGV0dGVJbmRleAINAAAAAAAAAv////8L
</value>
  </data>
</root>