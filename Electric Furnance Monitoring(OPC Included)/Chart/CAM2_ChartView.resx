<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axTChart1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAJwsAAAIB
        AAAAAQAAAAAAAAAAAAAAABILAABUUEYwC1RDaGFydENoYXJ0AARMZWZ0AgADVG9wAgAFV2lkdGgDHAEG
        SGVpZ2h0AwUBIUJhY2tXYWxsLkJydXNoLkdyYWRpZW50LkRpcmVjdGlvbgcLZ2RCb3R0b21Ub3AgQmFj
        a1dhbGwuQnJ1c2guR3JhZGllbnQuRW5kQ29sb3IHB2NsV2hpdGUgQmFja1dhbGwuQnJ1c2guR3JhZGll
        bnQuTWlkQ29sb3IHBmNsTm9uZSJCYWNrV2FsbC5CcnVzaC5HcmFkaWVudC5TdGFydENvbG9yBOrq6gAf
        QmFja1dhbGwuQnJ1c2guR3JhZGllbnQuVmlzaWJsZQkUQmFja1dhbGwuVHJhbnNwYXJlbnQIEEZvb3Qu
        Rm9udC5IZWlnaHQC8A5Gb290LkZvbnQuTmFtZQYHVmVyZGFuYQ9Gb290LkZvbnQuU3R5bGULBmZzQm9s
        ZAASR3JhZGllbnQuRGlyZWN0aW9uBwtnZEJvdHRvbVRvcBFHcmFkaWVudC5FbmRDb2xvcgcHY2xXaGl0
        ZRFHcmFkaWVudC5NaWRDb2xvcgTq6uoAE0dyYWRpZW50LlN0YXJ0Q29sb3IE6urqABBHcmFkaWVudC5W
        aXNpYmxlCQ5MZWZ0V2FsbC5Db2xvcgT//+AAD1JpZ2h0V2FsbC5Db2xvcgT//+AAE1N1YkZvb3QuRm9u
        dC5IZWlnaHQC8BFTdWJGb290LkZvbnQuTmFtZQYHVmVyZGFuYRJTdWJGb290LkZvbnQuU3R5bGULBmZz
        Qm9sZAAUU3ViVGl0bGUuRm9udC5IZWlnaHQC8BJTdWJUaXRsZS5Gb250Lk5hbWUGB1ZlcmRhbmETU3Vi
        VGl0bGUuRm9udC5TdHlsZQsGZnNCb2xkABFUaXRsZS5Gb250LkhlaWdodALwD1RpdGxlLkZvbnQuTmFt
        ZQYHVmVyZGFuYRBUaXRsZS5Gb250LlN0eWxlCwZmc0JvbGQAElRpdGxlLlRleHQuU3RyaW5ncwESAAAA
        AAAVQm90dG9tQXhpcy5BeGlzLkNvbG9yBEBAQAAYQm90dG9tQXhpcy5FeGFjdERhdGVUaW1lCBVCb3R0
        b21BeGlzLkdyaWQuQ29sb3IEqampABRCb3R0b21BeGlzLkluY3JlbWVudAUAAAAAAAAAoAFAHEJvdHRv
        bUF4aXMuTGFiZWxzRm9udC5IZWlnaHQC8BpCb3R0b21BeGlzLkxhYmVsc0ZvbnQuTmFtZQYHVmVyZGFu
        YRtCb3R0b21BeGlzLkxhYmVsc0ZvbnQuU3R5bGULBmZzQm9sZAAbQm90dG9tQXhpcy5UaWNrc0lubmVy
        LkNvbG9yBKmpqQAcQm90dG9tQXhpcy5UaXRsZS5Gb250LkhlaWdodALwGkJvdHRvbUF4aXMuVGl0bGUu
        Rm9udC5OYW1lBgdWZXJkYW5hG0JvdHRvbUF4aXMuVGl0bGUuRm9udC5TdHlsZQsGZnNCb2xkABREZXB0
        aEF4aXMuQXhpcy5Db2xvcgRAQEAAFERlcHRoQXhpcy5HcmlkLkNvbG9yBKmpqQAbRGVwdGhBeGlzLkxh
        YmVsc0ZvbnQuSGVpZ2h0AvAZRGVwdGhBeGlzLkxhYmVsc0ZvbnQuTmFtZQYHVmVyZGFuYRpEZXB0aEF4
        aXMuTGFiZWxzRm9udC5TdHlsZQsGZnNCb2xkABpEZXB0aEF4aXMuVGlja3NJbm5lci5Db2xvcgSpqakA
        G0RlcHRoQXhpcy5UaXRsZS5Gb250LkhlaWdodALwGURlcHRoQXhpcy5UaXRsZS5Gb250Lk5hbWUGB1Zl
        cmRhbmEaRGVwdGhBeGlzLlRpdGxlLkZvbnQuU3R5bGULBmZzQm9sZAAXRGVwdGhUb3BBeGlzLkF4aXMu
        Q29sb3IEQEBAABdEZXB0aFRvcEF4aXMuR3JpZC5Db2xvcgSpqakAHkRlcHRoVG9wQXhpcy5MYWJlbHNG
        b250LkhlaWdodALwHERlcHRoVG9wQXhpcy5MYWJlbHNGb250Lk5hbWUGB1ZlcmRhbmEdRGVwdGhUb3BB
        eGlzLkxhYmVsc0ZvbnQuU3R5bGULBmZzQm9sZAAdRGVwdGhUb3BBeGlzLlRpY2tzSW5uZXIuQ29sb3IE
        qampAB5EZXB0aFRvcEF4aXMuVGl0bGUuRm9udC5IZWlnaHQC8BxEZXB0aFRvcEF4aXMuVGl0bGUuRm9u
        dC5OYW1lBgdWZXJkYW5hHURlcHRoVG9wQXhpcy5UaXRsZS5Gb250LlN0eWxlCwZmc0JvbGQAEkxlZnRB
        eGlzLkF1dG9tYXRpYwgZTGVmdEF4aXMuQXV0b21hdGljTWF4aW11bQgZTGVmdEF4aXMuQXV0b21hdGlj
        TWluaW11bQgTTGVmdEF4aXMuQXhpcy5Db2xvcgRAQEAAE0xlZnRBeGlzLkdyaWQuQ29sb3IEqampABpM
        ZWZ0QXhpcy5MYWJlbHNGb250LkhlaWdodALwGExlZnRBeGlzLkxhYmVsc0ZvbnQuTmFtZQYHVmVyZGFu
        YRlMZWZ0QXhpcy5MYWJlbHNGb250LlN0eWxlCwZmc0JvbGQAEExlZnRBeGlzLk1heGltdW0FAAAAAAAA
        AJYIQBBMZWZ0QXhpcy5NaW5pbXVtBQAAAAAAAADIBMAZTGVmdEF4aXMuVGlja3NJbm5lci5Db2xvcgSp
        qakAGkxlZnRBeGlzLlRpdGxlLkZvbnQuSGVpZ2h0AvAYTGVmdEF4aXMuVGl0bGUuRm9udC5OYW1lBgdW
        ZXJkYW5hGUxlZnRBeGlzLlRpdGxlLkZvbnQuU3R5bGULBmZzQm9sZAARTGVnZW5kLkNoZWNrQm94ZXMJ
        EkxlZ2VuZC5Gb250LkhlaWdodALwEExlZ2VuZC5Gb250Lk5hbWUGB1ZlcmRhbmERTGVnZW5kLkZvbnQu
        U3R5bGULBmZzQm9sZAAYTGVnZW5kLlRpdGxlLkZvbnQuSGVpZ2h0AvAUUmlnaHRBeGlzLkF4aXMuQ29s
        b3IEQEBAABRSaWdodEF4aXMuR3JpZC5Db2xvcgSpqakAG1JpZ2h0QXhpcy5MYWJlbHNGb250LkhlaWdo
        dALwGVJpZ2h0QXhpcy5MYWJlbHNGb250Lk5hbWUGB1ZlcmRhbmEaUmlnaHRBeGlzLkxhYmVsc0ZvbnQu
        U3R5bGULBmZzQm9sZAAaUmlnaHRBeGlzLlRpY2tzSW5uZXIuQ29sb3IEqampABtSaWdodEF4aXMuVGl0
        bGUuRm9udC5IZWlnaHQC8BlSaWdodEF4aXMuVGl0bGUuRm9udC5OYW1lBgdWZXJkYW5hGlJpZ2h0QXhp
        cy5UaXRsZS5Gb250LlN0eWxlCwZmc0JvbGQAElRvcEF4aXMuQXhpcy5Db2xvcgRAQEAAElRvcEF4aXMu
        R3JpZC5Db2xvcgSpqakAGVRvcEF4aXMuTGFiZWxzRm9udC5IZWlnaHQC8BdUb3BBeGlzLkxhYmVsc0Zv
        bnQuTmFtZQYHVmVyZGFuYRhUb3BBeGlzLkxhYmVsc0ZvbnQuU3R5bGULBmZzQm9sZAAYVG9wQXhpcy5U
        aWNrc0lubmVyLkNvbG9yBKmpqQAZVG9wQXhpcy5UaXRsZS5Gb250LkhlaWdodALwF1RvcEF4aXMuVGl0
        bGUuRm9udC5OYW1lBgdWZXJkYW5hGFRvcEF4aXMuVGl0bGUuRm9udC5TdHlsZQsGZnNCb2xkAAZWaWV3
        M0QIEUNvbG9yUGFsZXR0ZUluZGV4Ag0AAAAAAAAC/////ws=
</value>
  </data>
</root>